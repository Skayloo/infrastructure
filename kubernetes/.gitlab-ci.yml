include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'

stages:
  - deploy

deploy:
  stage: deploy
  image: alpine/k8s:1.22.6
  environment:
    name: k8s
    url: https://paidyutov-daniil-22.k8s.praktikum-services.tech
  before_script:
    - rm -rf ~/.kube || true
    - mkdir -p ~/.kube || true
    - echo -n $kubeconfig | base64 -d > ~/.kube/config
    - chmod 644 ~/.kube/config
    # - kubectl create secret docker-registry regcred --docker-server=gitlab.praktikum-services.ru:5050 --docker-username=$CI_REGISTRY_USER --docker-password=$CI_REGISTRY_PASSWORD --docker-email=std-022-039
    # - cp ./kubernetes/config ~/.kube/
    - kubectl delete secret docker-config-secret || true
    # - kubectl delete secret regcred || true
    # - kubectl create secret generic docker-config-secret --from-file=.dockerconfigjson=$DOCKER_LOGIN_TOKEN --type=kubernetes.io/dockerconfigjson
    # - kubectl get secret docker-config-secret --output=yaml
    # невероятно, но как будто бы это надо было сделать ещё в пз 9.2 
    # (ну то есть, я и сделал, но написали, что это нужно сделать, только сейчас ¯\_(ツ)_/¯)
    # - kubectl create secret docker-registry regcred --docker-server=gitlab.praktikum-services.ru:5050 --docker-username=$CI_REGISTRY_USER --docker-password=$CI_REGISTRY_PASSWORD --namespace=std-022-039

  script:
    # - kubectl get pods -n std-022-039
    - kubectl delete --all deployments --namespace=std-022-039
    - kubectl delete --all pods --namespace=std-022-039 --grace-period=0 --force
    - kubectl wait --for=delete deployment --all --namespace=std-022-039 --timeout=100s
    - kubectl wait --for=delete pod --all --namespace=std-022-039 --timeout=100s
    # - kubectl get pods -n std-022-039
    # - kubectl get pods -l app=frontend -o=jsonpath='{.items[*].metadata.name}' | tr -s '[[:space:]]' '\n' | xargs -I {} kubectl logs {}

    - kubectl apply -f kubernetes/backend-report --recursive --kubeconfig ~/.kube/config
    - kubectl wait --for=condition=Available deployment.apps/backend-report --timeout=100s --kubeconfig ~/.kube/config
    # - kubectl logs deployment.apps/backend-report
    # - kubectl describe pod backend-report
    # - kubectl describe deployment backend-report --kubeconfig ~/.kube/config

    - kubectl apply -f kubernetes/backend --recursive --kubeconfig ~/.kube/config
    - kubectl wait --for=condition=Available deployment.apps/backend --timeout=100s --kubeconfig ~/.kube/config
    # - kubectl logs deployment.apps/backend
    # - kubectl describe pod backend
    # - kubectl describe deployment backend --kubeconfig ~/.kube/config
 
    - kubectl apply -f kubernetes/frontend --recursive --kubeconfig ~/.kube/config
    - kubectl wait --for=condition=Available deployment.apps/frontend --timeout=100s --kubeconfig ~/.kube/config
    # - kubectl logs deployment.apps/frontend

    # - kubectl get pods -n std-022-039

    - kubectl apply -f kubernetes/ingress --recursive --kubeconfig ~/.kube/config
    # - kubectl describe pod frontend
    # - kubectl describe deployment frontend --kubeconfig ~/.kube/config

    - rm ~/.kube/config